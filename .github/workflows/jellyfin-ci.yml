name: Jellyfin CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout do código
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Configurar .NET Core
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'  # Ajuste para a versão necessária do seu projeto

    # 3. Restaurar dependências
    - name: Restore dependencies
      run: dotnet restore ./Emby.Server.Implementations/Emby.Server.Implementations.csproj

    # 4. Compilar o projeto
    - name: Build the project
      run: dotnet build ./Emby.Server.Implementations/Emby.Server.Implementations.csproj --no-restore --configuration Release

    # 5. Executar testes
    - name: Run tests
      run: dotnet test --no-restore --verbosity normal

    # 6. Publicar o aplicativo
    - name: Publish the project
      run: dotnet publish ./Emby.Server.Implementations/Emby.Server.Implementations.csproj --configuration Release --output ./publish_output

    # 7. Verificar conteúdo da pasta após publicação
    - name: List published files
      run: ls -R ./publish_output

    # 8. Deploy para o Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'jellyfin-app'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./publish_output
