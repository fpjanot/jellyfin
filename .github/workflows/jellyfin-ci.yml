name: Jellyfin CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_test_analyze:
    runs-on: ubuntu-latest

    steps:
    # Checkout do código do repositório
    - name: Checkout code
      uses: actions/checkout@v2

    # Configurar .NET Core
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    # Adicionar etapas do CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3.26.7
      with:
        languages: 'csharp'
        queries: +security-extended

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3.26.7

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3.26.7

    # Instalar Java 17
    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Restaurar dependências
    - name: Restore dependencies
      run: dotnet restore

    # Executar testes automatizados
    - name: Run tests
      run: dotnet test --no-restore --verbosity normal

    # Build do projeto para análise
    - name: Build project
      run: dotnet build

    # Login no Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build da imagem Docker
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/jellyfin-app:latest .

    # Push da imagem Docker para o Docker Hub
    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/jellyfin-app:latest

    # Deploy para o Azure Web App
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'jellyfin'
        images: '${{ secrets.DOCKER_USERNAME }}/jellyfin-app:latest'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
